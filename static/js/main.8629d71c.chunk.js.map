{"version":3,"sources":["logo.svg","Components/UserCard.js","Components/Repos.js","Context/UserContext.js","Pages/Home.js","Pages/Signin.js","Pages/Signup.js","Pages/PageNotFound.js","Layouts/Footer.js","Layouts/Header.js","App.js","Config/FirebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","UserCard","user","Card","className","src","avatar_url","alt","CardBody","name","location","bio","hireable","followers","Repos","repos_url","useState","repos","setRepos","fetchRepos","a","Axios","get","data","useEffect","ListGroup","map","repo","ListGroupItem","key","id","language","description","UserContext","createContext","Home","context","useContext","query","setQuery","setUser","fetchDetails","console","log","toast","type","uid","Container","Row","Col","md","InputGroup","Input","value","onChange","e","target","placeholder","InputGroupAddon","addonType","Button","onClick","color","to","Signup","email","setEmail","password","setPassword","lg","Form","onSubmit","preventDefault","firebase","auth","signInWithEmailAndPassword","then","res","catch","error","message","CardHeader","FormGroup","row","Label","for","sm","CardFooter","block","createUserWithEmailAndPassword","PageNotFound","Footer","fluid","tag","Header","isOpen","setIsOpen","Navbar","light","expand","NavbarBrand","NavbarText","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Link","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","Provider","exact","path","component","Signin","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8629d71c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Card, CardBody } from \"reactstrap\";\r\n\r\nconst UserCard = ({user}) => {\r\n    return (\r\n        <Card className= ' text-center mt-3 mb-4'>\r\n            <img src={user.avatar_url} alt=\"avatar\" className='img-thumbnail'/>\r\n            <CardBody>\r\n                <div className= 'text-primary'>{user.name}</div>\r\n                <div className= 'text-primary'>{user.location}</div>\r\n                <div className= 'text-primary'>{user.bio}</div>\r\n                <div className= 'text-info'>Available for hire: {user.hireable ? 'YES':'NOPE'}</div>\r\n                <div className= 'text-info'>Followers: {user.followers}</div>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserCard;","import React, {useEffect, useState} from 'react';\r\nimport Axios from \"axios\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\n\r\nconst Repos = ({repos_url}) => {\r\n\r\n    const [repos, setRepos] = useState([])\r\n    const fetchRepos = async () => {\r\n        const {data} = await Axios.get(repos_url)\r\n        setRepos(data)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRepos()\r\n    }, [repos_url])\r\n\r\n    return (\r\n        <ListGroup>\r\n            {repos.map(repo => (\r\n                <ListGroupItem key={repo.id}>\r\n                    <div className=\"text-primary\">{repo.name}</div>\r\n                    <div className=\"text-secondary\">{repo.language}</div>\r\n                    <div className=\"text-info\">{repo.description}</div>\r\n                </ListGroupItem>\r\n            )\r\n            )}\r\n        </ListGroup>\r\n    );\r\n};\r\n\r\nexport default Repos;","import { createContext } from 'react';\r\nexport const UserContext = createContext()","import React, { useState, useContext } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nimport {\r\n  Row,\r\n  Container,\r\n  Col,\r\n  Input,\r\n  Button,\r\n  InputGroup,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport UserCard from \"../Components/UserCard\";\r\nimport Repos from \"../Components/Repos\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst Home = () => {\r\n    const context = useContext(UserContext)\r\n    const [query, setQuery] = useState('')\r\n    const [user, setUser] = useState(null)\r\n\r\n    const fetchDetails = async () => {\r\n        try {\r\n            const {data} = await Axios.get(`https://api.github.com/users/${query}`)\r\n            setUser(data)\r\n            console.log({data})\r\n        }\r\n        catch(error){\r\n            toast('Not able to locate the user', {type: 'error'})\r\n        }\r\n    }\r\n\r\n    //Put any page behind login\r\n\r\n    if(!context.user?.uid){\r\n        return<Redirect to='/signin'/>\r\n    }\r\n\r\n    return (\r\n    <Container>\r\n      <Row className=\" mt-3\">\r\n        <Col md=\"5\">\r\n          <InputGroup>\r\n            <Input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={e => setQuery(e.target.value)}\r\n              placeholder=\"Please provide the username\"\r\n            />\r\n            <InputGroupAddon addonType=\"append\">\r\n              <Button onClick={fetchDetails} color=\"primary\">Fetch User</Button>\r\n            </InputGroupAddon>\r\n          </InputGroup>\r\n          {user ? <UserCard user={user}/> : null}\r\n        </Col>\r\n        <Col md=\"7\">{user ? <Repos repos_url={user.repos_url}/> : null}</Col>\r\n      </Row>\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useContext, useState } from 'react';\r\nimport { Container, Form, Button, FormGroup, Label, Col, Input, Row, Card, CardBody, CardFooter, CardHeader } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport {UserContext} from \"../Context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n\r\n    const context = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSignUp = () => {\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then( res => {\r\n            console.log(res)\r\n            context.setUser({email: res.user.email, uid: res.user.uid})\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast(error.message, {\r\n                type: 'error'\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n\r\n    if (context.user?.uid) {\r\n        return<Redirect to='/' />\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignIn here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Signup;","import React, { useContext, useState } from 'react';\r\nimport { Container, Form, Button, FormGroup, Label, Col, Input, Row, Card, CardBody, CardFooter, CardHeader } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport {UserContext} from \"../Context/UserContext\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Signup = () => {\r\n\r\n    const context = useContext(UserContext)\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSignUp = () => {\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then( res => {\r\n            console.log(res)\r\n            context.setUser({email: res.user.email, uid: res.user.uid})\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            toast(error.message, {\r\n                type: 'error'\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignUp()\r\n    }\r\n\r\n    if (context.user?.uid) {\r\n        return<Redirect to='/' />\r\n    }\r\n    return (\r\n\t\t<Container className='text-center'>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={6} className='offset-lg-3 mt-5'>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<CardHeader className=''>SignUp here</CardHeader>\r\n\t\t\t\t\t\t\t<CardBody>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='email' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='provide your email'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t\t<FormGroup row>\r\n\t\t\t\t\t\t\t\t\t<Label for='password' sm={3}>\r\n\t\t\t\t\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t\t\t\t</Label>\r\n\t\t\t\t\t\t\t\t\t<Col sm={9}>\r\n\t\t\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\t\t\tid='password'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='your password here'\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t\t\t</CardBody>\r\n\t\t\t\t\t\t\t<CardFooter>\r\n\t\t\t\t\t\t\t\t<Button type='submit' block color='primary'>\r\n\t\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</CardFooter>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Signup;","import React from 'react';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>PageNotFound Page</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Container fluid\r\n        tag = 'footer'\r\n        className = 'text-center bg-info text-white text-uppercase fixed-bottom p-3'>\r\n            Github + Firebase = Gitbase\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useContext } from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, NavbarText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../Context/UserContext\";\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const context = useContext(UserContext)\r\n    const [isOpen, setIsOpen] = useState(false)\r\n\r\n    const toggle = () => setIsOpen(!isOpen)\r\n\r\n    return (\r\n        <Navbar color='info' light expand='md'>\r\n            <NavbarBrand>\r\n                <Link to='/' className='text-white'>GitBase App</Link>\r\n            </NavbarBrand>\r\n            <NavbarText className='text-white'>\r\n                {\r\n                    context.user?.email ? context.user.email : \"\"\r\n                }\r\n            </NavbarText>\r\n            <NavbarToggler onClick={toggle}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n            <Nav className='ml-auto' navbar>\r\n                {\r\n                    context.user ? (\r\n                    <NavItem>\r\n                        <NavLink onClick={ () => {context.setUser(null)}} className='text-white'>LogOut</NavLink>\r\n                    </NavItem>\r\n                    ) : (\r\n                    <>\r\n                    <NavItem>\r\n                    <NavLink tag={Link} to='/signup' className='text-white'>SignUp</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink  tag={Link} to='/signin' className='text-white'>SignIn</NavLink>\r\n                    </NavItem>\r\n                    </>\r\n                    )\r\n                }\r\n                \r\n                \r\n            </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Header;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport firebase from \"firebase/app\";\nimport 'firebase/auth'\nimport Home from \"./Pages/Home\";\nimport Signin from \"./Pages/Signin\";\nimport Signup from \"./Pages/Signup\";\nimport PageNotFound from \"./Pages/PageNotFound\";\nimport { UserContext } from './Context/UserContext';\nimport Footer from \"./Layouts/Footer\";\nimport Header from './Layouts/Header';\nimport FirebaseConfig from \"./Config/FirebaseConfig\";\n//initialize firebase\nfirebase.initializeApp(FirebaseConfig)\n\nconst App = () => {\n\n  const [user, setUser] = useState(null)\n\n  return (\n    <Router>\n      <ToastContainer/>\n      <UserContext.Provider value={{user, setUser}}>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/signin' component={Signin} />\n          <Route exact path='/signup' component={Signup} />\n          <Route exact path='*' component={PageNotFound} />\n        </Switch>\n        <Footer />\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","export default{\r\n        apiKey: \"AIzaSyDR8_uWgGIvjqQqoWm2uc6VZUQ5YCPu0lo\",\r\n        authDomain: \"mygithub-d2c62.firebaseapp.com\",\r\n        databaseURL: \"https://mygithub-d2c62.firebaseio.com\",\r\n        projectId: \"mygithub-d2c62\",\r\n        storageBucket: \"mygithub-d2c62.appspot.com\",\r\n        messagingSenderId: \"420454301054\",\r\n        appId: \"1:420454301054:web:4d1677e74925d06992c72f\",\r\n        measurementId: \"G-GGQFLJS49G\"\r\n      };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}